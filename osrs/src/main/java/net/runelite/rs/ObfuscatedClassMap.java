package net.runelite.rs;

import java.util.HashMap;

public class ObfuscatedClassMap extends HashMap<String, String> {
    public static ObfuscatedClassMap INSTANCE = new ObfuscatedClassMap();
    static {
		INSTANCE.put("AABB", "hl");
		INSTANCE.put("AbstractArchive", "ln");
		INSTANCE.put("AbstractByteArrayCopier", "lh");
		INSTANCE.put("AbstractFont", "nw");
		INSTANCE.put("AbstractRasterProvider", "rv");
		INSTANCE.put("AbstractSocket", "ov");
		INSTANCE.put("AbstractSound", "bo");
		INSTANCE.put("AbstractUserComparator", "ou");
		INSTANCE.put("AbstractWorldMapData", "ia");
		INSTANCE.put("AbstractWorldMapIcon", "io");
		INSTANCE.put("AccessFile", "qr");
		INSTANCE.put("Actor", "cb");
		INSTANCE.put("Animation", "hm");
		INSTANCE.put("ApproximateRouteStrategy", "bn");
		INSTANCE.put("Archive", "lm");
		INSTANCE.put("ArchiveDisk", "oi");
		INSTANCE.put("ArchiveDiskAction", "lx");
		INSTANCE.put("ArchiveDiskActionHandler", "li");
		INSTANCE.put("ArchiveLoader", "cr");
		INSTANCE.put("AttackOption", "co");
		INSTANCE.put("AudioFilter", "bm");
		INSTANCE.put("BoundaryObject", "hg");
		INSTANCE.put("Bounds", "oj");
		INSTANCE.put("Buddy", "oa");
		INSTANCE.put("BuddyRankComparator", "dl");
		INSTANCE.put("Buffer", "rd");
		INSTANCE.put("BufferedFile", "qp");
		INSTANCE.put("BufferedNetSocket", "oc");
		INSTANCE.put("BufferedSink", "os");
		INSTANCE.put("BufferedSource", "ox");
		INSTANCE.put("ByteArrayNode", "pd");
		INSTANCE.put("ByteArrayPool", "no");
		INSTANCE.put("BZip2Decompressor", "rb");
		INSTANCE.put("BZip2State", "ri");
		INSTANCE.put("Calendar", "lc");
		INSTANCE.put("Canvas", "e");
		INSTANCE.put("ChatChannel", "bx");
		INSTANCE.put("ClanChannel", "fm");
		INSTANCE.put("ClanChannelMember", "eu");
		INSTANCE.put("ClanMate", "og");
		INSTANCE.put("ClanSettings", "eb");
		INSTANCE.put("class0", "f");
		INSTANCE.put("class1", "w");
		INSTANCE.put("class10", "c");
		INSTANCE.put("class100", "cj");
		INSTANCE.put("class101", "ci");
		INSTANCE.put("class103", "cw");
		INSTANCE.put("class108", "dy");
		INSTANCE.put("class11", "r");
		INSTANCE.put("class119", "dd");
		INSTANCE.put("class12", "b");
		INSTANCE.put("class120", "dp");
		INSTANCE.put("class121", "ds");
		INSTANCE.put("class122", "dc");
		INSTANCE.put("class123", "de");
		INSTANCE.put("class124", "du");
		INSTANCE.put("class125", "da");
		INSTANCE.put("class126", "dk");
		INSTANCE.put("class127", "dx");
		INSTANCE.put("class128", "dj");
		INSTANCE.put("class129", "dq");
		INSTANCE.put("class13", "m");
		INSTANCE.put("class130", "ev");
		INSTANCE.put("class131", "en");
		INSTANCE.put("class132", "er");
		INSTANCE.put("class133", "ei");
		INSTANCE.put("class134", "el");
		INSTANCE.put("class135", "eq");
		INSTANCE.put("class136", "ea");
		INSTANCE.put("class137", "es");
		INSTANCE.put("class138", "ew");
		INSTANCE.put("class139", "ej");
		INSTANCE.put("class14", "t");
		INSTANCE.put("class140", "ed");
		INSTANCE.put("class142", "ex");
		INSTANCE.put("class143", "eh");
		INSTANCE.put("class144", "ep");
		INSTANCE.put("class145", "eo");
		INSTANCE.put("class146", "ey");
		INSTANCE.put("class147", "eg");
		INSTANCE.put("class148", "ec");
		INSTANCE.put("class149", "ef");
		INSTANCE.put("class15", "h");
		INSTANCE.put("class151", "et");
		INSTANCE.put("class152", "ee");
		INSTANCE.put("class153", "ez");
		INSTANCE.put("class154", "em");
		INSTANCE.put("class155", "ek");
		INSTANCE.put("class156", "fn");
		INSTANCE.put("class157", "fx");
		INSTANCE.put("class158", "fh");
		INSTANCE.put("class16", "p");
		INSTANCE.put("class160", "fe");
		INSTANCE.put("class161", "fl");
		INSTANCE.put("class162", "fu");
		INSTANCE.put("class163", "fi");
		INSTANCE.put("class165", "fd");
		INSTANCE.put("class166", "fs");
		INSTANCE.put("class168", "fq");
		INSTANCE.put("class17", "o");
		INSTANCE.put("class170", "fr");
		INSTANCE.put("class172", "ft");
		INSTANCE.put("class173", "fv");
		INSTANCE.put("class174", "fa");
		INSTANCE.put("class177", "fc");
		INSTANCE.put("class18", "u");
		INSTANCE.put("class19", "x");
		INSTANCE.put("class194", "gs");
		INSTANCE.put("class2", "v");
		INSTANCE.put("class20", "a");
		INSTANCE.put("class203", "gm");
		INSTANCE.put("class204", "gu");
		INSTANCE.put("class205", "gl");
		INSTANCE.put("class209", "hf");
		INSTANCE.put("class217", "hk");
		INSTANCE.put("class237", "ix");
		INSTANCE.put("class245", "iv");
		INSTANCE.put("class246", "iq");
		INSTANCE.put("class255", "in");
		INSTANCE.put("class257", "if");
		INSTANCE.put("class26", "af");
		INSTANCE.put("class265", "jn");
		INSTANCE.put("class266", "jz");
		INSTANCE.put("class267", "ju");
		INSTANCE.put("class268", "jj");
		INSTANCE.put("class269", "jb");
		INSTANCE.put("class27", "aa");
		INSTANCE.put("class275", "jo");
		INSTANCE.put("class276", "jm");
		INSTANCE.put("class277", "jq");
		INSTANCE.put("class278", "jf");
		INSTANCE.put("class28", "ai");
		INSTANCE.put("class284", "jx");
		INSTANCE.put("class285", "jk");
		INSTANCE.put("class286", "ki");
		INSTANCE.put("class287", "ku");
		INSTANCE.put("class288", "kf");
		INSTANCE.put("class29", "ag");
		INSTANCE.put("class290", "ks");
		INSTANCE.put("class3", "s");
		INSTANCE.put("class30", "aw");
		INSTANCE.put("class301", "km");
		INSTANCE.put("class302", "kr");
		INSTANCE.put("class303", "kc");
		INSTANCE.put("class304", "kn");
		INSTANCE.put("class305", "kl");
		INSTANCE.put("class307", "kp");
		INSTANCE.put("class308", "kh");
		INSTANCE.put("class31", "ar");
		INSTANCE.put("class310", "kw");
		INSTANCE.put("class312", "lj");
		INSTANCE.put("class316", "lk");
		INSTANCE.put("class317", "ly");
		INSTANCE.put("class320", "lg");
		INSTANCE.put("class321", "lb");
		INSTANCE.put("class322", "lz");
		INSTANCE.put("class323", "la");
		INSTANCE.put("class326", "lr");
		INSTANCE.put("class327", "ll");
		INSTANCE.put("class328", "lt");
		INSTANCE.put("class33", "at");
		INSTANCE.put("class330", "lo");
		INSTANCE.put("class347", "mu");
		INSTANCE.put("class348", "md");
		INSTANCE.put("class349", "mb");
		INSTANCE.put("class350", "mq");
		INSTANCE.put("class36", "az");
		INSTANCE.put("class361", "mz");
		INSTANCE.put("class362", "mh");
		INSTANCE.put("class363", "mr");
		INSTANCE.put("class364", "nc");
		INSTANCE.put("class365", "ni");
		INSTANCE.put("class366", "ne");
		INSTANCE.put("class367", "nd");
		INSTANCE.put("class368", "nf");
		INSTANCE.put("class369", "nk");
		INSTANCE.put("class370", "ng");
		INSTANCE.put("class372", "np");
		INSTANCE.put("class373", "nu");
		INSTANCE.put("class374", "nq");
		INSTANCE.put("class376", "nm");
		INSTANCE.put("class377", "nn");
		INSTANCE.put("class378", "na");
		INSTANCE.put("class380", "ny");
		INSTANCE.put("class382", "nh");
		INSTANCE.put("class384", "nj");
		INSTANCE.put("class385", "nz");
		INSTANCE.put("class386", "nb");
		INSTANCE.put("class387", "nx");
		INSTANCE.put("class388", "nl");
		INSTANCE.put("class389", "nr");
		INSTANCE.put("class390", "oq");
		INSTANCE.put("class391", "ok");
		INSTANCE.put("class392", "oh");
		INSTANCE.put("class4", "z");
		INSTANCE.put("class415", "oy");
		INSTANCE.put("class416", "pl");
		INSTANCE.put("class417", "pb");
		INSTANCE.put("class418", "pn");
		INSTANCE.put("class419", "pv");
		INSTANCE.put("class420", "px");
		INSTANCE.put("class421", "pq");
		INSTANCE.put("class422", "po");
		INSTANCE.put("class423", "pp");
		INSTANCE.put("class424", "pj");
		INSTANCE.put("class425", "pk");
		INSTANCE.put("class426", "pe");
		INSTANCE.put("class427", "pf");
		INSTANCE.put("class428", "pm");
		INSTANCE.put("class429", "ps");
		INSTANCE.put("class430", "pt");
		INSTANCE.put("class431", "pw");
		INSTANCE.put("class432", "ph");
		INSTANCE.put("class447", "qd");
		INSTANCE.put("class451", "qs");
		INSTANCE.put("class452", "qe");
		INSTANCE.put("class454", "qa");
		INSTANCE.put("class457", "qb");
		INSTANCE.put("class458", "qt");
		INSTANCE.put("class459", "qk");
		INSTANCE.put("class460", "qx");
		INSTANCE.put("class461", "qw");
		INSTANCE.put("class462", "ql");
		INSTANCE.put("class463", "qn");
		INSTANCE.put("class464", "qv");
		INSTANCE.put("class467", "qc");
		INSTANCE.put("class469", "rr");
		INSTANCE.put("class474", "rx");
		INSTANCE.put("class477", "rz");
		INSTANCE.put("class478", "ro");
		INSTANCE.put("class481", "rc");
		INSTANCE.put("class482", "rm");
		INSTANCE.put("class488", "rk");
		INSTANCE.put("class491", "rj");
		INSTANCE.put("class495", "sj");
		INSTANCE.put("class498", "st");
		INSTANCE.put("class5", "j");
		INSTANCE.put("class50", "as");
		INSTANCE.put("class6", "i");
		INSTANCE.put("class68", "bk");
		INSTANCE.put("class7", "n");
		INSTANCE.put("class70", "by");
		INSTANCE.put("class8", "l");
		INSTANCE.put("class81", "cp");
		INSTANCE.put("class85", "ch");
		INSTANCE.put("class86", "ck");
		INSTANCE.put("class88", "cx");
		INSTANCE.put("class9", "k");
		INSTANCE.put("class96", "cm");
		INSTANCE.put("class97", "ce");
		INSTANCE.put("Client", "client");
		INSTANCE.put("ClientPacket", "jv");
		INSTANCE.put("ClientPreferences", "cy");
		INSTANCE.put("Clock", "fb");
		INSTANCE.put("CollisionMap", "gv");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenRequester", "com/jagex/oldscape/pub/RefreshAccessTokenRequester");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenResponse", "com/jagex/oldscape/pub/RefreshAccessTokenResponse");
		INSTANCE.put("Coord", "ko");
		INSTANCE.put("DbRowType", "rn");
		INSTANCE.put("DbTableType", "qh");
		INSTANCE.put("Decimator", "br");
		INSTANCE.put("DefaultsGroup", "of");
		INSTANCE.put("DemotingHashTable", "jp");
		INSTANCE.put("DesktopPlatformInfoProvider", "pc");
		INSTANCE.put("DevicePcmPlayer", "g");
		INSTANCE.put("DevicePcmPlayerProvider", "d");
		INSTANCE.put("DirectByteArrayCopier", "lw");
		INSTANCE.put("DirectWrapper", "jc");
		INSTANCE.put("DualNode", "pi");
		INSTANCE.put("DualNodeDeque", "my");
		INSTANCE.put("DynamicObject", "bh");
		INSTANCE.put("EnumComposition", "gq");
		INSTANCE.put("EvictingDualNodeHashTable", "ja");
		INSTANCE.put("FaceNormal", "hb");
		INSTANCE.put("FileSystem", "fw");
		INSTANCE.put("FillMode", "re");
		INSTANCE.put("FloorDecoration", "hq");
		INSTANCE.put("FloorOverlayDefinition", "gz");
		INSTANCE.put("FloorUnderlayDefinition", "gc");
		INSTANCE.put("Font", "nv");
		INSTANCE.put("FontName", "qy");
		INSTANCE.put("Fonts", "qq");
		INSTANCE.put("Frames", "hw");
		INSTANCE.put("Friend", "ol");
		INSTANCE.put("FriendLoginUpdate", "oo");
		INSTANCE.put("FriendsChat", "on");
		INSTANCE.put("FriendsList", "oe");
		INSTANCE.put("FriendSystem", "bt");
		INSTANCE.put("GameBuild", "lp");
		INSTANCE.put("GameEngine", "aj");
		INSTANCE.put("GameObject", "iu");
		INSTANCE.put("GrandExchangeEvent", "mv");
		INSTANCE.put("GrandExchangeEvents", "mk");
		INSTANCE.put("GrandExchangeOffer", "mi");
		INSTANCE.put("GrandExchangeOfferAgeComparator", "ma");
		INSTANCE.put("GrandExchangeOfferNameComparator", "mp");
		INSTANCE.put("GrandExchangeOfferOwnWorldComparator", "bi");
		INSTANCE.put("GrandExchangeOfferTotalQuantityComparator", "mw");
		INSTANCE.put("GrandExchangeOfferUnitPriceComparator", "mx");
		INSTANCE.put("GrandExchangeOfferWorldComparator", "ml");
		INSTANCE.put("GraphicsDefaults", "or");
		INSTANCE.put("GraphicsObject", "bb");
		INSTANCE.put("GZipDecompressor", "rp");
		INSTANCE.put("HealthBar", "cv");
		INSTANCE.put("HealthBarDefinition", "gi");
		INSTANCE.put("HealthBarUpdate", "cz");
		INSTANCE.put("HitSplatDefinition", "gb");
		INSTANCE.put("HorizontalAlignment", "gw");
		INSTANCE.put("Huffman", "kg");
		INSTANCE.put("Ignored", "oz");
		INSTANCE.put("IgnoreList", "om");
		INSTANCE.put("IndexedSprite", "rg");
		INSTANCE.put("Instrument", "be");
		INSTANCE.put("IntegerNode", "pg");
		INSTANCE.put("InterfaceParent", "cq");
		INSTANCE.put("Interpreter", "bg");
		INSTANCE.put("IntHashTable", "sp");
		INSTANCE.put("InvDefinition", "fz");
		INSTANCE.put("IsaacCipher", "rt");
		INSTANCE.put("ItemComposition", "gr");
		INSTANCE.put("ItemContainer", "cs");
		INSTANCE.put("ItemLayer", "hi");
		INSTANCE.put("IterableDualNodeQueue", "mc");
		INSTANCE.put("IterableDualNodeQueueIterator", "mj");
		INSTANCE.put("IterableNodeDeque", "mt");
		INSTANCE.put("IterableNodeDequeDescendingIterator", "mf");
		INSTANCE.put("IterableNodeHashTable", "qu");
		INSTANCE.put("IterableNodeHashTableIterator", "qi");
		INSTANCE.put("JagexCache", "fj");
		INSTANCE.put("JSONArray", "org/json/JSONArray");
		INSTANCE.put("JSONException", "org/json/JSONException");
		INSTANCE.put("JSONObject$Null", "org/json/JSONObject$Null");
		INSTANCE.put("JSONObject", "org/json/JSONObject");
		INSTANCE.put("JSONString", "org/json/JSONString");
		INSTANCE.put("JSONTokener", "org/json/JSONTokener");
		INSTANCE.put("KeyHandler", "y");
		INSTANCE.put("KitDefinition", "gf");
		INSTANCE.put("Language", "mn");
		INSTANCE.put("Link", "pz");
		INSTANCE.put("LinkDeque", "me");
		INSTANCE.put("Login", "bu");
		INSTANCE.put("LoginPacket", "jw");
		INSTANCE.put("LoginScreenAnimation", "ca");
		INSTANCE.put("LoginType", "qj");
		INSTANCE.put("LongNode", "pa");
		INSTANCE.put("MenuAction", "bs");
		INSTANCE.put("Message", "bq");
		INSTANCE.put("Messages", "dz");
		INSTANCE.put("MidiFileReader", "kj");
		INSTANCE.put("MidiPcmStream", "ky");
		INSTANCE.put("MilliClock", "fo");
		INSTANCE.put("Model", "hs");
		INSTANCE.put("ModelData", "he");
		INSTANCE.put("ModelData0", "hp");
		INSTANCE.put("ModeWhere", "mm");
		INSTANCE.put("MouseHandler", "ax");
		INSTANCE.put("MouseRecorder", "cc");
		INSTANCE.put("MouseWheelHandler", "q");
		INSTANCE.put("MoveSpeed", "hz");
		INSTANCE.put("MusicPatch", "kk");
		INSTANCE.put("MusicPatchNode", "kv");
		INSTANCE.put("MusicPatchNode2", "kq");
		INSTANCE.put("MusicPatchPcmStream", "kt");
		INSTANCE.put("MusicTrack", "kd");
		INSTANCE.put("NanoClock", "fk");
		INSTANCE.put("net/runelite/rs/Opcodes", "net/runelite/rs/Opcodes");
		INSTANCE.put("NetCache", "lv");
		INSTANCE.put("NetFileRequest", "ld");
		INSTANCE.put("NewShit", "gj");
		INSTANCE.put("Node", "pr");
		INSTANCE.put("NodeDeque", "mo");
		INSTANCE.put("NodeHashTable", "qg");
		INSTANCE.put("NPC", "cf");
		INSTANCE.put("NPCComposition", "go");
		INSTANCE.put("ObjectComposition", "gp");
		INSTANCE.put("ObjectNode", "py");
		INSTANCE.put("ObjectSound", "bd");
		INSTANCE.put("ObjTypeCustomisation", "fy");
		INSTANCE.put("Occluder", "hx");
		INSTANCE.put("OtlTokenResponse", "com/jagex/oldscape/pub/OtlTokenResponse");
		INSTANCE.put("PacketBuffer", "ru");
		INSTANCE.put("PacketBufferNode", "ji");
		INSTANCE.put("PacketWriter", "db");
		INSTANCE.put("ParamComposition", "gy");
		INSTANCE.put("PcmPlayer", "ak");
		INSTANCE.put("PcmStream", "an");
		INSTANCE.put("PcmStreamMixer", "ay");
		INSTANCE.put("PcmStreamMixerListener", "bz");
		INSTANCE.put("PendingSpawn", "ct");
		INSTANCE.put("PlatformInfo", "pu");
		INSTANCE.put("PlatformInfoProvider", "qm");
		INSTANCE.put("Player", "cl");
		INSTANCE.put("PlayerComposition", "ka");
		INSTANCE.put("Players", "cn");
		INSTANCE.put("PlayerType", "lu");
		INSTANCE.put("PrivateChatMode", "ra");
		INSTANCE.put("Projectile", "bp");
		INSTANCE.put("Rasterizer2D", "rq");
		INSTANCE.put("Rasterizer3D", "hr");
		INSTANCE.put("RasterProvider", "al");
		INSTANCE.put("RawPcmStream", "ab");
		INSTANCE.put("RawSound", "av");
		INSTANCE.put("ReflectionCheck", "ap");
		INSTANCE.put("Renderable", "hd");
		INSTANCE.put("RouteStrategy", "gt");
		INSTANCE.put("RunException", "sf");
		INSTANCE.put("Scene", "hn");
		INSTANCE.put("SceneTileModel", "hj");
		INSTANCE.put("SceneTilePaint", "hc");
		INSTANCE.put("Script", "ba");
		INSTANCE.put("ScriptEvent", "cd");
		INSTANCE.put("ScriptFrame", "bl");
		INSTANCE.put("SecureRandomCallable", "cu");
		INSTANCE.put("SecureRandomFuture", "bc");
		INSTANCE.put("SequenceDefinition", "ge");
		INSTANCE.put("ServerPacket", "jg");
		INSTANCE.put("Skeleton", "ha");
		INSTANCE.put("Skills", "ls");
		INSTANCE.put("SoftWrapper", "jh");
		INSTANCE.put("SoundCache", "ah");
		INSTANCE.put("SoundEffect", "ac");
		INSTANCE.put("SoundEnvelope", "au");
		INSTANCE.put("SoundSystem", "ae");
		INSTANCE.put("SpotAnimationDefinition", "gg");
		INSTANCE.put("SpriteMask", "kb");
		INSTANCE.put("SpritePixels", "rs");
		INSTANCE.put("Strings", "lq");
		INSTANCE.put("StructComposition", "gn");
		INSTANCE.put("StudioGame", "le");
		INSTANCE.put("Task", "ff");
		INSTANCE.put("TaskHandler", "fg");
		INSTANCE.put("Texture", "hv");
		INSTANCE.put("TextureLoader", "hh");
		INSTANCE.put("TextureProvider", "ho");
		INSTANCE.put("Tile", "hy");
		INSTANCE.put("TileItem", "cg");
		INSTANCE.put("Tiles", "bv");
		INSTANCE.put("Timer", "ns");
		INSTANCE.put("TriBool", "ot");
		INSTANCE.put("UrlRequest", "dg");
		INSTANCE.put("UrlRequester", "di");
		INSTANCE.put("User", "ow");
		INSTANCE.put("UserComparator1", "rh");
		INSTANCE.put("UserComparator10", "dt");
		INSTANCE.put("UserComparator2", "ry");
		INSTANCE.put("UserComparator3", "dr");
		INSTANCE.put("UserComparator4", "dm");
		INSTANCE.put("UserComparator5", "dv");
		INSTANCE.put("UserComparator6", "dh");
		INSTANCE.put("UserComparator7", "df");
		INSTANCE.put("UserComparator8", "dn");
		INSTANCE.put("UserComparator9", "do");
		INSTANCE.put("UserList", "ob");
		INSTANCE.put("Username", "si");
		INSTANCE.put("Usernamed", "od");
		INSTANCE.put("VarbitComposition", "gh");
		INSTANCE.put("VarcInt", "ga");
		INSTANCE.put("Varcs", "dw");
		INSTANCE.put("VarpDefinition", "fp");
		INSTANCE.put("Varps", "ke");
		INSTANCE.put("VertexNormal", "ht");
		INSTANCE.put("VerticalAlignment", "gd");
		INSTANCE.put("ViewportMouse", "hu");
		INSTANCE.put("VorbisCodebook", "ao");
		INSTANCE.put("VorbisFloor", "aq");
		INSTANCE.put("VorbisMapping", "am");
		INSTANCE.put("VorbisResidue", "ad");
		INSTANCE.put("VorbisSample", "bj");
		INSTANCE.put("WallDecoration", "ij");
		INSTANCE.put("Widget", "kz");
		INSTANCE.put("World", "bw");
		INSTANCE.put("WorldMap", "qf");
		INSTANCE.put("WorldMapArchiveLoader", "qz");
		INSTANCE.put("WorldMapArea", "ii");
		INSTANCE.put("WorldMapAreaData", "je");
		INSTANCE.put("WorldMapCacheName", "jt");
		INSTANCE.put("WorldMapData_0", "ih");
		INSTANCE.put("WorldMapData_1", "it");
		INSTANCE.put("WorldMapDecoration", "ik");
		INSTANCE.put("WorldMapDecorationType", "lf");
		INSTANCE.put("WorldMapElement", "gk");
		INSTANCE.put("WorldMapEvent", "jd");
		INSTANCE.put("WorldMapIcon_0", "ig");
		INSTANCE.put("WorldMapIcon_1", "iz");
		INSTANCE.put("WorldMapID", "ie");
		INSTANCE.put("WorldMapLabel", "il");
		INSTANCE.put("WorldMapLabelSize", "ip");
		INSTANCE.put("WorldMapManager", "ic");
		INSTANCE.put("WorldMapRectangle", "is");
		INSTANCE.put("WorldMapRegion", "id");
		INSTANCE.put("WorldMapScaleHandler", "jl");
		INSTANCE.put("WorldMapSection", "jy");
		INSTANCE.put("WorldMapSection0", "ir");
		INSTANCE.put("WorldMapSection1", "im");
		INSTANCE.put("WorldMapSection2", "iw");
		INSTANCE.put("WorldMapSectionType", "ib");
		INSTANCE.put("WorldMapSprite", "iy");
		INSTANCE.put("Wrapper", "jr");
		INSTANCE.put("ZoneOperation", "js");
    }
}