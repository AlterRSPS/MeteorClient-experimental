package net.runelite.rs;

import java.util.HashMap;

public class ObfuscatedClassMap extends HashMap<String, String> {
    public static ObfuscatedClassMap INSTANCE = new ObfuscatedClassMap();
    static {
		INSTANCE.put("AABB", "if");
		INSTANCE.put("AbstractArchive", "nd");
		INSTANCE.put("AbstractByteArrayCopier", "me");
		INSTANCE.put("AbstractFont", "pq");
		INSTANCE.put("AbstractRasterProvider", "uk");
		INSTANCE.put("AbstractSocket", "qh");
		INSTANCE.put("AbstractSound", "cm");
		INSTANCE.put("AbstractUserComparator", "qz");
		INSTANCE.put("AbstractWorldMapData", "km");
		INSTANCE.put("AbstractWorldMapIcon", "kv");
		INSTANCE.put("AccessFile", "tn");
		INSTANCE.put("Actor", "dx");
		INSTANCE.put("AddRequestTask", "pe");
		INSTANCE.put("Animation", "im");
		INSTANCE.put("ApproximateRouteStrategy", "co");
		INSTANCE.put("Archive", "ny");
		INSTANCE.put("ArchiveDisk", "rg");
		INSTANCE.put("ArchiveDiskAction", "nn");
		INSTANCE.put("ArchiveDiskActionHandler", "nl");
		INSTANCE.put("ArchiveLoader", "dr");
		INSTANCE.put("AttackOption", "dw");
		INSTANCE.put("AudioFilter", "cn");
		INSTANCE.put("BoundaryObject", "je");
		INSTANCE.put("Bounds", "rk");
		INSTANCE.put("Buddy", "qa");
		INSTANCE.put("BuddyRankComparator", "ea");
		INSTANCE.put("Buffer", "ty");
		INSTANCE.put("BufferedFile", "ts");
		INSTANCE.put("BufferedNetSocket", "qq");
		INSTANCE.put("BufferedSink", "rh");
		INSTANCE.put("BufferedSource", "qy");
		INSTANCE.put("ByteArrayPool", "pk");
		INSTANCE.put("BZip2Decompressor", "tj");
		INSTANCE.put("BZip2State", "tb");
		INSTANCE.put("Calendar", "md");
		INSTANCE.put("Canvas", "af");
		INSTANCE.put("ChatChannel", "dg");
		INSTANCE.put("ClanChannel", "gh");
		INSTANCE.put("ClanChannelMember", "fv");
		INSTANCE.put("ClanMate", "qg");
		INSTANCE.put("ClanSettings", "fx");
		INSTANCE.put("class0", "aw");
		INSTANCE.put("class1", "ay");
		INSTANCE.put("class10", "aq");
		INSTANCE.put("class101", "dl");
		INSTANCE.put("class102", "db");
		INSTANCE.put("class105", "em");
		INSTANCE.put("class106", "ec");
		INSTANCE.put("class108", "er");
		INSTANCE.put("class11", "at");
		INSTANCE.put("class113", "eh");
		INSTANCE.put("class12", "ah");
		INSTANCE.put("class124", "ef");
		INSTANCE.put("class125", "ev");
		INSTANCE.put("class126", "ez");
		INSTANCE.put("class127", "ek");
		INSTANCE.put("class128", "eu");
		INSTANCE.put("class129", "ep");
		INSTANCE.put("class13", "ax");
		INSTANCE.put("class130", "fm");
		INSTANCE.put("class131", "fa");
		INSTANCE.put("class132", "fg");
		INSTANCE.put("class133", "fq");
		INSTANCE.put("class134", "fy");
		INSTANCE.put("class135", "fw");
		INSTANCE.put("class136", "fp");
		INSTANCE.put("class137", "fz");
		INSTANCE.put("class138", "fj");
		INSTANCE.put("class139", "fb");
		INSTANCE.put("class14", "aa");
		INSTANCE.put("class140", "fl");
		INSTANCE.put("class141", "fd");
		INSTANCE.put("class142", "fh");
		INSTANCE.put("class143", "fc");
		INSTANCE.put("class144", "fu");
		INSTANCE.put("class146", "fr");
		INSTANCE.put("class147", "fs");
		INSTANCE.put("class148", "fn");
		INSTANCE.put("class149", "ff");
		INSTANCE.put("class15", "au");
		INSTANCE.put("class150", "fk");
		INSTANCE.put("class151", "ft");
		INSTANCE.put("class152", "fe");
		INSTANCE.put("class153", "fo");
		INSTANCE.put("class155", "fi");
		INSTANCE.put("class156", "gc");
		INSTANCE.put("class157", "gp");
		INSTANCE.put("class158", "ga");
		INSTANCE.put("class159", "gg");
		INSTANCE.put("class16", "ae");
		INSTANCE.put("class160", "gs");
		INSTANCE.put("class161", "ge");
		INSTANCE.put("class162", "go");
		INSTANCE.put("class164", "gj");
		INSTANCE.put("class165", "gm");
		INSTANCE.put("class166", "gx");
		INSTANCE.put("class167", "gr");
		INSTANCE.put("class169", "gt");
		INSTANCE.put("class17", "ab");
		INSTANCE.put("class170", "gq");
		INSTANCE.put("class172", "gl");
		INSTANCE.put("class174", "gf");
		INSTANCE.put("class176", "gz");
		INSTANCE.put("class177", "gi");
		INSTANCE.put("class178", "gb");
		INSTANCE.put("class18", "ad");
		INSTANCE.put("class181", "gw");
		INSTANCE.put("class184", "hp");
		INSTANCE.put("class19", "ao");
		INSTANCE.put("class191", "hr");
		INSTANCE.put("class197", "hd");
		INSTANCE.put("class2", "ar");
		INSTANCE.put("class20", "ac");
		INSTANCE.put("class200", "hy");
		INSTANCE.put("class203", "hu");
		INSTANCE.put("class210", "is");
		INSTANCE.put("class211", "iw");
		INSTANCE.put("class212", "iy");
		INSTANCE.put("class213", "ih");
		INSTANCE.put("class215", "ir");
		INSTANCE.put("class217", "iq");
		INSTANCE.put("class219", "ib");
		INSTANCE.put("class220", "id");
		INSTANCE.put("class228", "iv");
		INSTANCE.put("class229", "ii");
		INSTANCE.put("class239", "jh");
		INSTANCE.put("class244", "jw");
		INSTANCE.put("class246", "ji");
		INSTANCE.put("class253", "jz");
		INSTANCE.put("class26", "bd");
		INSTANCE.put("class261", "kd");
		INSTANCE.put("class27", "bb");
		INSTANCE.put("class271", "kx");
		INSTANCE.put("class272", "ku");
		INSTANCE.put("class273", "kq");
		INSTANCE.put("class28", "bn");
		INSTANCE.put("class281", "ks");
		INSTANCE.put("class282", "kj");
		INSTANCE.put("class283", "kc");
		INSTANCE.put("class284", "kb");
		INSTANCE.put("class285", "kh");
		INSTANCE.put("class29", "ba");
		INSTANCE.put("class292", "lu");
		INSTANCE.put("class293", "le");
		INSTANCE.put("class294", "lh");
		INSTANCE.put("class3", "am");
		INSTANCE.put("class30", "bf");
		INSTANCE.put("class300", "ln");
		INSTANCE.put("class301", "lt");
		INSTANCE.put("class302", "lp");
		INSTANCE.put("class303", "lf");
		INSTANCE.put("class304", "ly");
		INSTANCE.put("class306", "lq");
		INSTANCE.put("class309", "lg");
		INSTANCE.put("class31", "bs");
		INSTANCE.put("class310", "ll");
		INSTANCE.put("class312", "mn");
		INSTANCE.put("class313", "mf");
		INSTANCE.put("class317", "mh");
		INSTANCE.put("class319", "mx");
		INSTANCE.put("class324", "mv");
		INSTANCE.put("class325", "my");
		INSTANCE.put("class326", "ms");
		INSTANCE.put("class327", "mc");
		INSTANCE.put("class328", "mz");
		INSTANCE.put("class33", "bv");
		INSTANCE.put("class330", "mo");
		INSTANCE.put("class331", "mg");
		INSTANCE.put("class333", "mk");
		INSTANCE.put("class335", "ml");
		INSTANCE.put("class339", "nf");
		INSTANCE.put("class340", "nb");
		INSTANCE.put("class343", "nv");
		INSTANCE.put("class344", "na");
		INSTANCE.put("class345", "ns");
		INSTANCE.put("class346", "nc");
		INSTANCE.put("class350", "nm");
		INSTANCE.put("class351", "nt");
		INSTANCE.put("class353", "nr");
		INSTANCE.put("class358", "nx");
		INSTANCE.put("class36", "br");
		INSTANCE.put("class365", "ow");
		INSTANCE.put("class370", "oq");
		INSTANCE.put("class371", "oe");
		INSTANCE.put("class372", "os");
		INSTANCE.put("class373", "oi");
		INSTANCE.put("class384", "oh");
		INSTANCE.put("class385", "oy");
		INSTANCE.put("class386", "oo");
		INSTANCE.put("class387", "op");
		INSTANCE.put("class389", "oa");
		INSTANCE.put("class390", "pl");
		INSTANCE.put("class391", "pa");
		INSTANCE.put("class392", "pg");
		INSTANCE.put("class393", "pd");
		INSTANCE.put("class395", "pt");
		INSTANCE.put("class396", "ph");
		INSTANCE.put("class397", "pz");
		INSTANCE.put("class399", "po");
		INSTANCE.put("class4", "as");
		INSTANCE.put("class402", "pu");
		INSTANCE.put("class404", "pi");
		INSTANCE.put("class410", "py");
		INSTANCE.put("class411", "pw");
		INSTANCE.put("class415", "pr");
		INSTANCE.put("class417", "qw");
		INSTANCE.put("class419", "qc");
		INSTANCE.put("class420", "qb");
		INSTANCE.put("class421", "qd");
		INSTANCE.put("class422", "qu");
		INSTANCE.put("class423", "qo");
		INSTANCE.put("class424", "ql");
		INSTANCE.put("class425", "qr");
		INSTANCE.put("class449", "ri");
		INSTANCE.put("class450", "rj");
		INSTANCE.put("class451", "rm");
		INSTANCE.put("class452", "rv");
		INSTANCE.put("class453", "rp");
		INSTANCE.put("class454", "rr");
		INSTANCE.put("class455", "rt");
		INSTANCE.put("class456", "rn");
		INSTANCE.put("class457", "rl");
		INSTANCE.put("class458", "rc");
		INSTANCE.put("class459", "ro");
		INSTANCE.put("class46", "bm");
		INSTANCE.put("class460", "rw");
		INSTANCE.put("class461", "rs");
		INSTANCE.put("class462", "rq");
		INSTANCE.put("class463", "re");
		INSTANCE.put("class464", "rx");
		INSTANCE.put("class465", "ry");
		INSTANCE.put("class466", "rd");
		INSTANCE.put("class467", "rz");
		INSTANCE.put("class47", "bl");
		INSTANCE.put("class476", "so");
		INSTANCE.put("class477", "sc");
		INSTANCE.put("class478", "sd");
		INSTANCE.put("class479", "ss");
		INSTANCE.put("class480", "sl");
		INSTANCE.put("class481", "sk");
		INSTANCE.put("class486", "sf");
		INSTANCE.put("class490", "se");
		INSTANCE.put("class491", "sj");
		INSTANCE.put("class492", "sn");
		INSTANCE.put("class494", "ta");
		INSTANCE.put("class497", "tt");
		INSTANCE.put("class498", "tp");
		INSTANCE.put("class499", "td");
		INSTANCE.put("class5", "aj");
		INSTANCE.put("class500", "te");
		INSTANCE.put("class501", "tv");
		INSTANCE.put("class502", "ti");
		INSTANCE.put("class503", "tm");
		INSTANCE.put("class504", "tw");
		INSTANCE.put("class505", "tg");
		INSTANCE.put("class507", "tx");
		INSTANCE.put("class509", "tq");
		INSTANCE.put("class51", "bj");
		INSTANCE.put("class510", "th");
		INSTANCE.put("class514", "tr");
		INSTANCE.put("class517", "tl");
		INSTANCE.put("class518", "tf");
		INSTANCE.put("class521", "ul");
		INSTANCE.put("class522", "uh");
		INSTANCE.put("class525", "uc");
		INSTANCE.put("class528", "uv");
		INSTANCE.put("class53", "cf");
		INSTANCE.put("class531", "um");
		INSTANCE.put("class535", "ur");
		INSTANCE.put("class538", "up");
		INSTANCE.put("class59", "cw");
		INSTANCE.put("class6", "ag");
		INSTANCE.put("class60", "ce");
		INSTANCE.put("class7", "az");
		INSTANCE.put("class72", "cp");
		INSTANCE.put("class74", "cg");
		INSTANCE.put("class8", "av");
		INSTANCE.put("class85", "dk");
		INSTANCE.put("class89", "dd");
		INSTANCE.put("class9", "ap");
		INSTANCE.put("class90", "dt");
		INSTANCE.put("class92", "dm");
		INSTANCE.put("class93", "du");
		INSTANCE.put("Client", "client");
		INSTANCE.put("ClientPacket", "lw");
		INSTANCE.put("ClientPreferences", "da");
		INSTANCE.put("Clips", "jq");
		INSTANCE.put("Clock", "hf");
		INSTANCE.put("CollisionMap", "ij");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenRequester", "com/jagex/oldscape/pub/RefreshAccessTokenRequester");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenResponse", "com/jagex/oldscape/pub/RefreshAccessTokenResponse");
		INSTANCE.put("ConcurrentMidiTask", "pf");
		INSTANCE.put("Coord", "mr");
		INSTANCE.put("DbRowType", "tu");
		INSTANCE.put("DbTableType", "tk");
		INSTANCE.put("Decimator", "cj");
		INSTANCE.put("DefaultsGroup", "rf");
		INSTANCE.put("DelayFadeTask", "pn");
		INSTANCE.put("DemotingHashTable", "lj");
		INSTANCE.put("DesktopPlatformInfoProvider", "su");
		INSTANCE.put("DevicePcmPlayer", "ai");
		INSTANCE.put("DevicePcmPlayerProvider", "an");
		INSTANCE.put("DirectByteArrayCopier", "np");
		INSTANCE.put("DirectWrapper", "li");
		INSTANCE.put("DualNode", "sh");
		INSTANCE.put("DualNodeDeque", "ob");
		INSTANCE.put("DynamicObject", "dq");
		INSTANCE.put("EnumComposition", "hm");
		INSTANCE.put("EvictingDualNodeHashTable", "ld");
		INSTANCE.put("FaceNormal", "jd");
		INSTANCE.put("FadeInTask", "pb");
		INSTANCE.put("FadeOutTask", "px");
		INSTANCE.put("FileSystem", "gk");
		INSTANCE.put("FloorDecoration", "ip");
		INSTANCE.put("FloorOverlayDefinition", "ia");
		INSTANCE.put("FloorUnderlayDefinition", "hj");
		INSTANCE.put("Font", "pc");
		INSTANCE.put("FontName", "sg");
		INSTANCE.put("Fonts", "sz");
		INSTANCE.put("Frames", "jm");
		INSTANCE.put("Friend", "qi");
		INSTANCE.put("FriendLoginUpdate", "qt");
		INSTANCE.put("FriendsChat", "qk");
		INSTANCE.put("FriendsList", "qp");
		INSTANCE.put("FriendSystem", "cd");
		INSTANCE.put("GameBuild", "ni");
		INSTANCE.put("GameEngine", "bq");
		INSTANCE.put("GameObject", "jc");
		INSTANCE.put("GrandExchangeEvent", "ol");
		INSTANCE.put("GrandExchangeEvents", "ng");
		INSTANCE.put("GrandExchangeOffer", "oc");
		INSTANCE.put("GrandExchangeOfferAgeComparator", "ou");
		INSTANCE.put("GrandExchangeOfferNameComparator", "nj");
		INSTANCE.put("GrandExchangeOfferOwnWorldComparator", "cu");
		INSTANCE.put("GrandExchangeOfferTotalQuantityComparator", "ne");
		INSTANCE.put("GrandExchangeOfferUnitPriceComparator", "ov");
		INSTANCE.put("GrandExchangeOfferWorldComparator", "ok");
		INSTANCE.put("GraphicsDefaults", "ru");
		INSTANCE.put("GraphicsObject", "cl");
		INSTANCE.put("GZipDecompressor", "un");
		INSTANCE.put("HealthBar", "dv");
		INSTANCE.put("HealthBarDefinition", "ha");
		INSTANCE.put("HealthBarUpdate", "dp");
		INSTANCE.put("HitSplatDefinition", "hk");
		INSTANCE.put("HorizontalAlignment", "hz");
		INSTANCE.put("Huffman", "ma");
		INSTANCE.put("Ignored", "qn");
		INSTANCE.put("IgnoreList", "qm");
		INSTANCE.put("IndexedSprite", "uu");
		INSTANCE.put("Instrument", "cq");
		INSTANCE.put("IntegerNode", "sx");
		INSTANCE.put("InterfaceParent", "dn");
		INSTANCE.put("Interpreter", "ck");
		INSTANCE.put("IntHashTable", "uj");
		INSTANCE.put("InvDefinition", "hh");
		INSTANCE.put("IsaacCipher", "uy");
		INSTANCE.put("ItemComposition", "hc");
		INSTANCE.put("ItemContainer", "do");
		INSTANCE.put("ItemLayer", "ix");
		INSTANCE.put("IterableDualNodeQueue", "oz");
		INSTANCE.put("IterableDualNodeQueueIterator", "oj");
		INSTANCE.put("IterableNodeDeque", "or");
		INSTANCE.put("IterableNodeDequeDescendingIterator", "on");
		INSTANCE.put("IterableNodeHashTable", "sa");
		INSTANCE.put("IterableNodeHashTableIterator", "sw");
		INSTANCE.put("JagexCache", "gd");
		INSTANCE.put("JagNetThread", "nq");
		INSTANCE.put("JSONArray", "org/json/JSONArray");
		INSTANCE.put("JSONException", "org/json/JSONException");
		INSTANCE.put("JSONObject$Null", "org/json/JSONObject$Null");
		INSTANCE.put("JSONObject", "org/json/JSONObject");
		INSTANCE.put("JSONString", "org/json/JSONString");
		INSTANCE.put("JSONTokener", "org/json/JSONTokener");
		INSTANCE.put("KeyHandler", "al");
		INSTANCE.put("KitDefinition", "hx");
		INSTANCE.put("Language", "ot");
		INSTANCE.put("Link", "sp");
		INSTANCE.put("LinkDeque", "om");
		INSTANCE.put("LoadSongTask", "ps");
		INSTANCE.put("Login", "ci");
		INSTANCE.put("LoginPacket", "lx");
		INSTANCE.put("LoginScreenAnimation", "ds");
		INSTANCE.put("LoginType", "si");
		INSTANCE.put("LongNode", "sv");
		INSTANCE.put("MenuAction", "ch");
		INSTANCE.put("Message", "cx");
		INSTANCE.put("Messages", "eo");
		INSTANCE.put("MidiFileReader", "lb");
		INSTANCE.put("MidiPcmStream", "lc");
		INSTANCE.put("MilliClock", "gn");
		INSTANCE.put("Model", "jo");
		INSTANCE.put("ModelData", "ie");
		INSTANCE.put("ModelData0", "ja");
		INSTANCE.put("ModeWhere", "ox");
		INSTANCE.put("MouseHandler", "bo");
		INSTANCE.put("MouseRecorder", "de");
		INSTANCE.put("MouseWheelHandler", "ak");
		INSTANCE.put("MoveSpeed", "io");
		INSTANCE.put("MusicPatch", "lm");
		INSTANCE.put("MusicPatchNode", "mw");
		INSTANCE.put("MusicPatchNode2", "lk");
		INSTANCE.put("MusicPatchPcmStream", "mm");
		INSTANCE.put("MusicSong", "mj");
		INSTANCE.put("MusicTrack", "mp");
		INSTANCE.put("NanoClock", "gy");
		INSTANCE.put("net/runelite/rs/Opcodes", "net/runelite/rs/Opcodes");
		INSTANCE.put("net/runelite/rs/ScriptOpcodes", "net/runelite/rs/Opcodes");
		INSTANCE.put("NewShit", "hs");
		INSTANCE.put("Node", "sb");
		INSTANCE.put("NodeDeque", "od");
		INSTANCE.put("NodeHashTable", "sm");
		INSTANCE.put("NPC", "dh");
		INSTANCE.put("NPCComposition", "hi");
		INSTANCE.put("ObjectComposition", "hb");
		INSTANCE.put("ObjectNode", "sr");
		INSTANCE.put("ObjectSound", "cy");
		INSTANCE.put("ObjTypeCustomisation", "hv");
		INSTANCE.put("Occluder", "jp");
		INSTANCE.put("OtlTokenResponse", "com/jagex/oldscape/pub/OtlTokenResponse");
		INSTANCE.put("PacketBuffer", "tc");
		INSTANCE.put("PacketBufferNode", "lv");
		INSTANCE.put("PacketWriter", "eb");
		INSTANCE.put("ParamComposition", "hq");
		INSTANCE.put("PcmPlayer", "bk");
		INSTANCE.put("PcmStream", "by");
		INSTANCE.put("PcmStreamMixer", "be");
		INSTANCE.put("PcmStreamMixerListener", "cs");
		INSTANCE.put("PendingSpawn", "dz");
		INSTANCE.put("PlatformInfo", "sy");
		INSTANCE.put("Player", "df");
		INSTANCE.put("PlayerComposition", "mb");
		INSTANCE.put("Players", "el");
		INSTANCE.put("PlayerType", "nw");
		INSTANCE.put("PrivateChatMode", "ut");
		INSTANCE.put("Projectile", "cv");
		INSTANCE.put("Rasterizer2D", "us");
		INSTANCE.put("Rasterizer3D", "iu");
		INSTANCE.put("RasterProvider", "bp");
		INSTANCE.put("RawPcmStream", "bt");
		INSTANCE.put("RawSound", "bi");
		INSTANCE.put("ReflectionCheck", "bw");
		INSTANCE.put("Renderable", "it");
		INSTANCE.put("RouteStrategy", "in");
		INSTANCE.put("RunException", "uf");
		INSTANCE.put("Scene", "iz");
		INSTANCE.put("SceneTileModel", "ju");
		INSTANCE.put("SceneTilePaint", "jl");
		INSTANCE.put("Script", "dc");
		INSTANCE.put("ScriptEvent", "di");
		INSTANCE.put("ScriptFrame", "ca");
		INSTANCE.put("SecureRandomCallable", "dy");
		INSTANCE.put("SecureRandomFuture", "cc");
		INSTANCE.put("SequenceDefinition", "ig");
		INSTANCE.put("ServerPacket", "ls");
		INSTANCE.put("Skeleton", "ik");
		INSTANCE.put("Skills", "nh");
		INSTANCE.put("SoftWrapper", "lr");
		INSTANCE.put("SongTask", "pp");
		INSTANCE.put("SoundCache", "bh");
		INSTANCE.put("SoundEffect", "bc");
		INSTANCE.put("SoundEnvelope", "bz");
		INSTANCE.put("SoundSystem", "bx");
		INSTANCE.put("SpotAnimation", "ub");
		INSTANCE.put("SpotAnimationDefinition", "hw");
		INSTANCE.put("SpriteMask", "mi");
		INSTANCE.put("SpritePixels", "ud");
		INSTANCE.put("Strings", "nz");
		INSTANCE.put("StructComposition", "ht");
		INSTANCE.put("StudioGame", "nu");
		INSTANCE.put("SwapSongTask", "pj");
		INSTANCE.put("Task", "gu");
		INSTANCE.put("TaskHandler", "gv");
		INSTANCE.put("Texture", "ic");
		INSTANCE.put("TextureLoader", "jy");
		INSTANCE.put("TextureProvider", "jb");
		INSTANCE.put("Tile", "il");
		INSTANCE.put("TileItem", "et");
		INSTANCE.put("Tiles", "dj");
		INSTANCE.put("Timer", "pm");
		INSTANCE.put("TriBool", "qj");
		INSTANCE.put("UrlRequest", "ei");
		INSTANCE.put("UrlRequester", "ej");
		INSTANCE.put("User", "qe");
		INSTANCE.put("UserComparator1", "tz");
		INSTANCE.put("UserComparator10", "ed");
		INSTANCE.put("UserComparator2", "uw");
		INSTANCE.put("UserComparator3", "eg");
		INSTANCE.put("UserComparator4", "en");
		INSTANCE.put("UserComparator5", "ee");
		INSTANCE.put("UserComparator6", "ex");
		INSTANCE.put("UserComparator7", "eq");
		INSTANCE.put("UserComparator8", "es");
		INSTANCE.put("UserComparator9", "ey");
		INSTANCE.put("UserList", "qs");
		INSTANCE.put("Username", "ui");
		INSTANCE.put("Usernamed", "qv");
		INSTANCE.put("VarbitComposition", "hn");
		INSTANCE.put("VarcInt", "he");
		INSTANCE.put("Varcs", "ew");
		INSTANCE.put("VarpDefinition", "hg");
		INSTANCE.put("Varps", "mq");
		INSTANCE.put("VertexNormal", "jk");
		INSTANCE.put("VerticalAlignment", "hl");
		INSTANCE.put("ViewportMouse", "jr");
		INSTANCE.put("VorbisCodebook", "ct");
		INSTANCE.put("VorbisFloor", "bu");
		INSTANCE.put("VorbisMapping", "bg");
		INSTANCE.put("VorbisSample", "cz");
		INSTANCE.put("WallDecoration", "jt");
		INSTANCE.put("Widget", "mt");
		INSTANCE.put("World", "cr");
		INSTANCE.put("WorldMap", "sq");
		INSTANCE.put("WorldMapArchiveLoader", "st");
		INSTANCE.put("WorldMapArea", "js");
		INSTANCE.put("WorldMapAreaData", "ko");
		INSTANCE.put("WorldMapCacheName", "kp");
		INSTANCE.put("WorldMapData_0", "jn");
		INSTANCE.put("WorldMapData_1", "kt");
		INSTANCE.put("WorldMapDecoration", "kk");
		INSTANCE.put("WorldMapDecorationType", "no");
		INSTANCE.put("WorldMapElement", "ho");
		INSTANCE.put("WorldMapEvent", "kl");
		INSTANCE.put("WorldMapIcon_0", "kf");
		INSTANCE.put("WorldMapIcon_1", "jg");
		INSTANCE.put("WorldMapLabel", "ka");
		INSTANCE.put("WorldMapLabelSize", "jj");
		INSTANCE.put("WorldMapManager", "jf");
		INSTANCE.put("WorldMapRectangle", "kn");
		INSTANCE.put("WorldMapRegion", "jv");
		INSTANCE.put("WorldMapScaleHandler", "ki");
		INSTANCE.put("WorldMapSection", "kz");
		INSTANCE.put("WorldMapSection0", "kg");
		INSTANCE.put("WorldMapSection1", "ky");
		INSTANCE.put("WorldMapSection2", "jx");
		INSTANCE.put("WorldMapSectionType", "ke");
		INSTANCE.put("WorldMapSprite", "kw");
		INSTANCE.put("Wrapper", "la");
		INSTANCE.put("ZoneOperation", "lo");
    }
}